window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"kraken_parsers": {"fullname": "kraken_parsers", "modulename": "kraken_parsers", "kind": "module", "doc": "<p></p>\n"}, "kraken_parsers.PatientData": {"fullname": "kraken_parsers.PatientData", "modulename": "kraken_parsers", "qualname": "PatientData", "kind": "class", "doc": "<p>Object containing patient name / identification, which can be passed to bins we can add, specific to the patient, to provide necessary information on location in context to their patient name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>patient_name</strong> (str):\nUnique identifier of patient used in construction of filesystem and potentially bin names. These are particular to the set of bins generated from the patient's sample.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>patient_name</strong> (str):\nUnique identifier of patient used in construction of filesystem and potentially bin names. These are particular to the set of bins generated from the patient's sample.</li>\n<li><strong>bin_data</strong> (list of BinData):\nList of bins that are associated with this patient. This is the ideal way of adding bins if patient information and encapsulation based on patient is desired.</li>\n</ul>\n"}, "kraken_parsers.PatientData.__init__": {"fullname": "kraken_parsers.PatientData.__init__", "modulename": "kraken_parsers", "qualname": "PatientData.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">patient_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "kraken_parsers.PatientData.patient_name": {"fullname": "kraken_parsers.PatientData.patient_name", "modulename": "kraken_parsers", "qualname": "PatientData.patient_name", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.bin_data": {"fullname": "kraken_parsers.PatientData.bin_data", "modulename": "kraken_parsers", "qualname": "PatientData.bin_data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[kraken_parsers.PatientData.BinData]"}, "kraken_parsers.PatientData.append_bin_with_attributes": {"fullname": "kraken_parsers.PatientData.append_bin_with_attributes", "modulename": "kraken_parsers", "qualname": "PatientData.append_bin_with_attributes", "kind": "function", "doc": "<p>Constructs a BinData instance to append to the bin_data attribute of this PatientData instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bin_name</strong> (str):\nA name that indicates the name of the bin in the file system under the parent_folder directory.</li>\n<li><strong>parent_folder</strong> (str):\nThe name of the directory in which the bin this BinData instance is referring to is contained.</li>\n<li><strong>include_patient_name</strong> (bool):\nWhether or not to include patient name in constructing the bin's path.\nNote: This will create a bin path with the format {patient_name}_{bin_name}{bin_suffix} if enabled.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bin_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parent_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">include_patient_name</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.append_bin": {"fullname": "kraken_parsers.PatientData.append_bin", "modulename": "kraken_parsers", "qualname": "PatientData.append_bin", "kind": "function", "doc": "<p>Appends a BinData instance to the bin_data attribute of this PatientData instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bin_name</strong> (BinData):\nBinData instance added directly to the bin_data list attribute of this PatientData instance.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">bin</span><span class=\"p\">:</span> <span class=\"n\">kraken_parsers</span><span class=\"o\">.</span><span class=\"n\">PatientData</span><span class=\"o\">.</span><span class=\"n\">BinData</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData": {"fullname": "kraken_parsers.PatientData.BinData", "modulename": "kraken_parsers", "qualname": "PatientData.BinData", "kind": "class", "doc": "<p>Object containing information needed to construct a path that addresses the correct bin in the filesystem.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bin_name</strong> (str):\nNonunique descriptor of bin that this BinData refers to. \nThe default nomenclature of bins follow the syntax: bin.{bin_number}.{reassembly_variant} .\nOrdinarily, you won't have the file extension included, but if you do make sure to set bin_suffix to \"\" or None.</li>\n<li><strong>parent_folder</strong> (str):\nFile path of directory that contains the bin that this BinData instance refers to.</li>\n<li><strong>patient_name</strong> (str, optional):\nName / Identifier of patient that provided the sample that the bin was generated from.</li>\n<li><strong>bin_suffix</strong> (str, optional):\nFile extension that the user may specify to address the proper bin file in the directory.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><p><strong>bin_name, parent_folder, patient_name, bin_suffix</strong> (see Parameters):</p></li>\n<li><p><strong>bin_path</strong> (pathlib.Path):\npath of bin file that this BinData instance refers to -- it includes the bin file itself in the path.</p></li>\n<li><strong>kraken_output</strong> (list of KrakenOutputEntry):\nlist of KrakenOutputEntry objects that can be filtered and contain information linking bins and kraken information.</li>\n</ul>\n"}, "kraken_parsers.PatientData.BinData.__init__": {"fullname": "kraken_parsers.PatientData.BinData.__init__", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bin_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parent_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">patient_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">bin_suffix</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.fa&#39;</span></span>)</span>"}, "kraken_parsers.PatientData.BinData.patient_name": {"fullname": "kraken_parsers.PatientData.BinData.patient_name", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.patient_name", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.bin_name": {"fullname": "kraken_parsers.PatientData.BinData.bin_name", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.bin_name", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"fullname": "kraken_parsers.PatientData.BinData.add_suffix_to_path", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.add_suffix_to_path", "kind": "function", "doc": "<p>Adds file extension to path.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>suffix</strong> (str, optional):\nThe file extension to be added to the path of the bin.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"fullname": "kraken_parsers.PatientData.BinData.get_kraken_output", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.get_kraken_output", "kind": "function", "doc": "<p>Returns private kraken output variable that is a list of kraken output entries particular to this bin.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self._kraken_output</strong> (list of KrakenOutputEntry):\nprivate kraken_output variable that represents a list of kraken output entries generated by kraken2 on this bin.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">kraken_parsers</span><span class=\"o\">.</span><span class=\"n\">PatientData</span><span class=\"o\">.</span><span class=\"n\">BinData</span><span class=\"o\">.</span><span class=\"n\">KrakenOutputEntry</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"fullname": "kraken_parsers.PatientData.BinData.set_kraken_output", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.set_kraken_output", "kind": "function", "doc": "<p>Sets private kraken output variable to the list of kraken output entries provided</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">kraken_output</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">kraken_parsers</span><span class=\"o\">.</span><span class=\"n\">PatientData</span><span class=\"o\">.</span><span class=\"n\">BinData</span><span class=\"o\">.</span><span class=\"n\">KrakenOutputEntry</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"fullname": "kraken_parsers.PatientData.BinData.set_kraken_output_by_file", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.set_kraken_output_by_file", "kind": "function", "doc": "<p>Used to instantiate a Kraken Output object, which contains data generated by Kraken when supplied this bin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kraken_output_filename</strong> (str):\nThe filename and path of the file to read and parse for Kraken Output information.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">kraken_output_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"fullname": "kraken_parsers.PatientData.BinData.set_bin_attributes", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.set_bin_attributes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"fullname": "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.filter_kraken_output_by_taxa", "kind": "function", "doc": "<p>Ran after set_kraken_output(). This takes this BinData instance's kraken_output and removes any taxa specified in extraneous_taxa.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>extraneous_taxa</strong> (list of int):\nList of NCBI taxonomic ids as numbers only that the user specifies as marked for removal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of KrakenOutputEntry where none of the entries have an \"excluded\" taxonomic ID.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">extraneous_taxa</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">kraken_parsers</span><span class=\"o\">.</span><span class=\"n\">PatientData</span><span class=\"o\">.</span><span class=\"n\">BinData</span><span class=\"o\">.</span><span class=\"n\">KrakenOutputEntry</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.replace_node_names": {"fullname": "kraken_parsers.PatientData.BinData.replace_node_names", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.replace_node_names", "kind": "function", "doc": "<p>Replaces node names in a bin file with taxonomic id, its sequence length, the proportion of sequence length the complementary entry makes up in the bin, and the total sequence length of the bin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>output_path</strong> (str):\nThe directory within the file system which the new annotated bin file should be output to.</li>\n<li><strong>suffix</strong> (str, optional):\nThe extension which should be added to the end of the bin's previous, original filename.</li>\n<li><strong>replace_old_suffix</strong> (bool):\nDecision to replace the extension of the original bin filename. Should be True if the user has bin files with an extension (e.g. .fa, .txt, etc.). Should be False if the reassembly variant is the last portion of the filepath.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">output_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;_tax.fa&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">replace_old_suffix</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"fullname": "kraken_parsers.PatientData.BinData.generate_tax_group_summary", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.generate_tax_group_summary", "kind": "function", "doc": "<p>Generates a tab-delimited summary file with each taxonomic ID present in the bin file with replaced node names, their cumulative sequence length, and percent contribution their cumulative sequence length constitutes as a proportion of the total bin length.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>output_path</strong> (str):\nThe directory within the file system which the new taxonomic group summary should be output to.</li>\n<li><strong>suffix</strong> (str, optional):\nThe extension which should be added to the end of the bin's previous, original filename.</li>\n<li><strong>replace_old_suffix</strong> (bool):\nDecision to replace the extension of the original bin filename. Should be True if the user has bin files with an extension (e.g. .fa, .txt, etc.). Should be False if the reassembly variant is the last portion of the filepath.</li>\n<li><strong>enable_header</strong> (bool):\nIf true, will write header to the file, which consists of tab-delimited column names.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">output_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;_group.fa&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">replace_old_suffix</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">enable_header</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry", "kind": "class", "doc": "<p>An object that contains details on a single entry (one node) in a Kraken Output, parsed to match the correct type for further processing and utilization.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>classified</strong> (bool):\nTrue if a contig is considered classified (C) and false if unclassified (U).</li>\n<li><strong>seq_id</strong> (str):\nFull node name of a contig in a Kraken Output.</li>\n<li><strong>tax_id</strong> (str):\nFull taxonomic ID, including scientific name and numerical NCBI Taxonomic identifier.</li>\n<li><strong>seq_len</strong> (int):\nInteger representation of number of bases present in the sequence of the contig.</li>\n<li><strong>LCA_mapping</strong> (list of str):\nLowest Common Ancestor (LCA) Mapping of taxonomic id to k-mer in the format: tax_id:k-mer.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><p><strong>classified, seq_id, tax_id, seq_len, LCA_mapping</strong> (see Parameters):</p></li>\n<li><p><strong>num_tax_id</strong> (int):\nnumerical portion of the full tax ID and scientific name found in (taxid. ####).</p></li>\n</ul>\n"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">classified</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">seq_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tax_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">seq_len</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">LCA_mapping</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry.classified", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry.seq_id", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry.tax_id", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry.seq_len", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry.LCA_mapping", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"fullname": "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenOutputEntry.num_tax_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "kraken_parsers.PatientData.BinData.KrakenReport": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReport", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReport", "kind": "class", "doc": "<p>Object that contains information on clades of a Kraken Report in a tree-like structure.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>top_clades</strong> (list of KrakenReportClade):\ntop, or root-level, clades in the kraken report. This should only include clades marked as unclassified or root.\nNote: The tree-like structure is constructed with references from parent clades to their sub-clades via their children attribute.</li>\n</ul>\n"}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReport.top_clades", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReport.top_clades", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[kraken_parsers.PatientData.BinData.KrakenReportClade]"}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReport.print_all_clades", "kind": "function", "doc": "<p>Prints all clades in a hierarchical format with the specified delimiter being used as indentation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>delimiter</strong> (str):\nString used to indent sub-clades in the Kraken Report when printing out the taxonomies of the bin's contigs.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">delimiter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade", "kind": "class", "doc": "<p>Object that contains clade-specific information from a Kraken Report.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>Note: Details from https</strong> (//github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown):</p></li>\n<li><p><strong>perc_frag</strong> (float):\nPercentage of fragments covered by the clade rooted at this taxon. This percentage is the number of fragments covered by the clade rooted at this taxon / sum of fragments covered by the top clades.</p></li>\n<li><strong>num_frag_cov</strong> (int):\nNumber of fragments covered by the clade rooted at this taxon. This is the number of entries classified with the tax ID of either this clade or its sub-clades.</li>\n<li><strong>num_frag_asgn</strong> (int):\nNumber of fragments assigned directly to this taxon. This is reflected directly in the output; this is the number of entries classified as the tax ID of this clade in the Kraken Output.</li>\n<li><strong>rank_code</strong> (str):\nA rank code, indicating (U)nclassified, (R)oot, (D)omain, (K)ingdom, (P)hylum, (C)lass, (O)rder, (F)amily, (G)enus, or (S)pecies. Taxa that are not at any of these 10 ranks have a rank code that is formed by using the rank code of the closest ancestor rank with a number indicating the distance from that rank. E.g., \"G2\" is a rank code indicating a taxon is between genus and species and the grandparent taxon is at the genus rank.</li>\n<li><strong>num_tax_id</strong> (int):\nNCBI taxonomic ID number</li>\n<li><strong>ind_sci_name</strong> (str):\nIndented scientific name where greater number of spaces indicate deeper level of sub-taxonomy</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><p><strong>perc_frag, num_frag_cov, num_frag_asgn, rank_code, num_tax_id, ind_sci_name</strong> (see Parameters):</p></li>\n<li><p><strong>self.sci_name</strong> (str):\nThe scientific name without any preceeding or following white space.</p></li>\n<li><strong>self.depth</strong> (int):\nDepth of this clade in the tree calculated by amount of whitespace in the indented scientific name via the __init__ method.</li>\n<li><strong>self.children</strong> (list of KrakenReportClade):\nList of KrakenReportClades that are sub-clades of this KrakenReportClade.</li>\n</ul>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">perc_frag</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">num_frag_cov</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">num_frag_asgn</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">rank_code</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">num_tax_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ind_sci_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.perc_frag", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.num_frag_cov", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.num_frag_asgn", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.rank_code", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.num_tax_id", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.ind_sci_name", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.sci_name", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.depth", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.depth", "kind": "variable", "doc": "<p></p>\n"}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"fullname": "kraken_parsers.PatientData.BinData.KrakenReportClade.children", "modulename": "kraken_parsers", "qualname": "PatientData.BinData.KrakenReportClade.children", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[kraken_parsers.PatientData.BinData.KrakenReportClade]"}, "kraken_parsers.parse_kraken_output_line": {"fullname": "kraken_parsers.parse_kraken_output_line", "modulename": "kraken_parsers", "qualname": "parse_kraken_output_line", "kind": "function", "doc": "<p>Parses one line of Kraken Output files, where each line is a tab-delimited string with information on classification, sequence ID / Node name, taxonomic ID and scientific name, sequence length, and LCA / Lowest Common Ancestor mapping.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kraken_output_line</strong> (str):\nOne individual line passed from read_kraken_output that contains all Kraken Output information for its corresponding entry in the bin.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>KrakenOutputEntry instance with properly typed information.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kraken_output_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kraken_parsers</span><span class=\"o\">.</span><span class=\"n\">PatientData</span><span class=\"o\">.</span><span class=\"n\">BinData</span><span class=\"o\">.</span><span class=\"n\">KrakenOutputEntry</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.read_kraken_output": {"fullname": "kraken_parsers.read_kraken_output", "modulename": "kraken_parsers", "qualname": "read_kraken_output", "kind": "function", "doc": "<p>Reads a full kraken output file, parsing it for proper information via the parse_kraken_output_line function.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kraken_output_filename</strong> (str):\nFilepath of Kraken Output file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>List of KrakenOutputEntries with fully parsed information from the Kraken Output file.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kraken_output_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">kraken_parsers</span><span class=\"o\">.</span><span class=\"n\">PatientData</span><span class=\"o\">.</span><span class=\"n\">BinData</span><span class=\"o\">.</span><span class=\"n\">KrakenOutputEntry</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "kraken_parsers.read_kraken_report": {"fullname": "kraken_parsers.read_kraken_report", "modulename": "kraken_parsers", "qualname": "read_kraken_report", "kind": "function", "doc": "<p>Reads a whole KrakenReport file, line-by-line, creating a structure contained in the returned KrakenReport instance where top clades are stored and given children attributes to reference their sub-clades.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kraken_report_filename</strong> (str):\nFilepath of Kraken Report file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>KrakenReport instance with top clades, and each of their children having appropriate references to their sub-clades.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kraken_report_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">kraken_parsers</span><span class=\"o\">.</span><span class=\"n\">PatientData</span><span class=\"o\">.</span><span class=\"n\">BinData</span><span class=\"o\">.</span><span class=\"n\">KrakenReport</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"kraken_parsers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 158}, "kraken_parsers.PatientData.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.patient_name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.bin_data": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.append_bin_with_attributes": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 130}, "kraken_parsers.PatientData.append_bin": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 58}, "kraken_parsers.PatientData.BinData": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 235}, "kraken_parsers.PatientData.BinData.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.patient_name": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.bin_name": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 48}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 57}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 15}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 64}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 83}, "kraken_parsers.PatientData.BinData.replace_node_names": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 157}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 186}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 197}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"qualname": 6, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReport": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 87}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"qualname": 5, "fullname": 7, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 65}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 398}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"qualname": 4, "fullname": 6, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "kraken_parsers.parse_kraken_output_line": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 97}, "kraken_parsers.read_kraken_output": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 67}, "kraken_parsers.read_kraken_report": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 85}}, "length": 44, "save": true}, "index": {"qualname": {"root": {"docs": {"kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 40}}}}}}}}, "h": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 4}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}}, "df": 1}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}}, "df": 5, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 34}}}}}}, "y": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}}, "df": 3}, "q": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "i": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1, "p": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}}, "df": 4, "a": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 6}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}}, "df": 1}}}}}}}}}, "fullname": {"root": {"docs": {"kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 4, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers": {"tf": 1}, "kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 44, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers": {"tf": 1}, "kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 44}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 40}}}}}}}}, "h": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 4}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}}, "df": 1}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}}, "df": 5, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 34}}}}}}, "y": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}}, "df": 3}, "q": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "i": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1, "p": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1}}, "df": 4, "a": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 6}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1}}, "df": 1}}}}}}}}}, "annotation": {"root": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 3}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 3}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.bin_data": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"3": {"9": {"docs": {"kraken_parsers.PatientData.BinData.__init__": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {"kraken_parsers.PatientData.__init__": {"tf": 3.4641016151377544}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 6.782329983125268}, "kraken_parsers.PatientData.append_bin": {"tf": 5.291502622129181}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 7.615773105863909}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 5}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 5.385164807134504}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 6.082762530298219}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 4.47213595499958}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 3.1622776601683795}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 6.6332495807108}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 7.681145747868608}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 8.602325267042627}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 7.3484692283495345}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 5.656854249492381}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 7.615773105863909}, "kraken_parsers.parse_kraken_output_line": {"tf": 5.385164807134504}, "kraken_parsers.read_kraken_output": {"tf": 5.830951894845301}, "kraken_parsers.read_kraken_report": {"tf": 5.385164807134504}}, "df": 18, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 7}}}}}}}}, "h": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 7}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.__init__": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 2}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 13}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 11}}, "q": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {"kraken_parsers.PatientData.BinData.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1.7320508075688772}}, "df": 3}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 3, "a": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 8, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 5}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.__init__": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1}}, "df": 1}}}}}}, "bases": {"root": {"docs": {}, "df": 0}}, "doc": {"root": {"1": {"0": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"kraken_parsers": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData": {"tf": 5.830951894845301}, "kraken_parsers.PatientData.__init__": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.patient_name": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.bin_data": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 6.082762530298219}, "kraken_parsers.PatientData.append_bin": {"tf": 5}, "kraken_parsers.PatientData.BinData": {"tf": 7.810249675906654}, "kraken_parsers.PatientData.BinData.__init__": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.patient_name": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.bin_name": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 5}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 3.872983346207417}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 5}, "kraken_parsers.PatientData.BinData.set_bin_attributes": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 5.0990195135927845}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 6.082762530298219}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 6.557438524302}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 7.810249675906654}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.__init__": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.classified": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_id": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.tax_id": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.seq_len": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.LCA_mapping": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry.num_tax_id": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 5}, "kraken_parsers.PatientData.BinData.KrakenReport.top_clades": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 5}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 9.273618495495704}, "kraken_parsers.PatientData.BinData.KrakenReportClade.__init__": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.perc_frag": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_cov": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_frag_asgn": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.rank_code": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.num_tax_id": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.ind_sci_name": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.sci_name": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.depth": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade.children": {"tf": 1.7320508075688772}, "kraken_parsers.parse_kraken_output_line": {"tf": 5.291502622129181}, "kraken_parsers.read_kraken_output": {"tf": 5.0990195135927845}, "kraken_parsers.read_kraken_report": {"tf": 5.0990195135927845}}, "df": 44, "o": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 6, "s": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 2}}, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}}, "df": 2}}, "f": {"docs": {"kraken_parsers.PatientData": {"tf": 3}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.append_bin": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 2.6457513110645907}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 2}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2.6457513110645907}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 4.242640687119285}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 18}, "r": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 2}, "kraken_parsers.read_kraken_output": {"tf": 2.23606797749979}}, "df": 11}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 2}}, "s": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"2": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.449489742783178}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.6457513110645907}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 2.449489742783178}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}, "kraken_parsers.read_kraken_report": {"tf": 2}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "p": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData": {"tf": 3.4641016151377544}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData": {"tf": 1.7320508075688772}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "h": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 2.449489742783178}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 16}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 2, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 2}, "s": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1, "d": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 2}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 2.6457513110645907}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.449489742783178}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 3}, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 10}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.449489742783178}}, "df": 2, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.8284271247461903}}, "df": 3, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2.8284271247461903}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.23606797749979}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}, ":": {"docs": {}, "df": 0, "k": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 12, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.7320508075688772}, "kraken_parsers.read_kraken_output": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.append_bin": {"tf": 2}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 6}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 2, "d": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}, "s": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2}}, "df": 3, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.8284271247461903}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 9}, "f": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}}, "df": 6}, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 2, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.7320508075688772}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}, "s": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 2}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 2}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 2.6457513110645907}, "kraken_parsers.PatientData.append_bin": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData": {"tf": 3.872983346207417}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 2.6457513110645907}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 11, "s": {"docs": {"kraken_parsers.PatientData": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}}, "df": 2}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.append_bin": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}, "y": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.449489742783178}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 4}}, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1, "o": {"docs": {"kraken_parsers.PatientData": {"tf": 2.449489742783178}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 2}, "kraken_parsers.PatientData.append_bin": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 2.6457513110645907}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 2}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 15, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 3}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 2.449489742783178}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 3.1622776601683795}, "kraken_parsers.PatientData.append_bin": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 3.605551275463989}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 4.123105625617661}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 3.872983346207417}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 2}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 4.47213595499958}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1.7320508075688772}}, "df": 4}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 3}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.23606797749979}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.append_bin": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 3.4641016151377544}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2}}, "df": 2, "a": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.449489742783178}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1, "d": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.449489742783178}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 14, "d": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 4, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 10}, "y": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 2}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 3}}, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.23606797749979}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 3, "s": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 6}}}}}}}}}, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.append_bin": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 2}, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 2}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 13, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 3, "s": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}}, "df": 1}}, "e": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "f": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}}, "df": 2}}, "q": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 2}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "b": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 4}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 2}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 2}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 3}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 10}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"kraken_parsers.parse_kraken_output_line": {"tf": 2}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 3}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.7320508075688772}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}}, "u": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1.4142135623730951}}, "df": 3}, "r": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData": {"tf": 2.449489742783178}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 2}, "kraken_parsers.read_kraken_output": {"tf": 1.7320508075688772}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 3, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.449489742783178}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 2, "y": {"docs": {"kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}, "g": {"2": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}, "docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}}, "df": 4}, "s": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData": {"tf": 1}, "kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}}, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1, "d": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 4}}}, "y": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.7320508075688772}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1.7320508075688772}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.append_bin_with_attributes": {"tf": 1}, "kraken_parsers.PatientData.append_bin": {"tf": 1}, "kraken_parsers.PatientData.BinData.add_suffix_to_path": {"tf": 1}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 12}, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {"kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2, "s": {"docs": {"kraken_parsers.read_kraken_output": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}, "d": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}}, "df": 1, "k": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 3}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}, "kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}, "kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.generate_tax_group_summary": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1, "s": {"docs": {"kraken_parsers.PatientData.BinData.replace_node_names": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.7320508075688772}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {"kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"2": {"docs": {"kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}}, "df": 1}, "docs": {"kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 2.23606797749979}, "kraken_parsers.PatientData.BinData.set_kraken_output": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.set_kraken_output_by_file": {"tf": 2}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenOutputEntry": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.KrakenReport.print_all_clades": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}, "kraken_parsers.parse_kraken_output_line": {"tf": 2}, "kraken_parsers.read_kraken_output": {"tf": 2.23606797749979}, "kraken_parsers.read_kraken_report": {"tf": 1.4142135623730951}}, "df": 12, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"kraken_parsers.PatientData.BinData": {"tf": 1.4142135623730951}, "kraken_parsers.PatientData.BinData.get_kraken_output": {"tf": 1}, "kraken_parsers.PatientData.BinData.filter_kraken_output_by_taxa": {"tf": 1}, "kraken_parsers.parse_kraken_output_line": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"kraken_parsers.read_kraken_output": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"kraken_parsers.read_kraken_report": {"tf": 1.7320508075688772}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReport": {"tf": 1}, "kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"kraken_parsers.PatientData.BinData.KrakenReportClade": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();